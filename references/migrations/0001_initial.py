# Generated by Django 2.2.5 on 2020-09-02 01:25

from django.db import migrations, models
import django.db.models.deletion
import references.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CertificatePrices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('STCprice', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('VEECprice', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('ESCprice', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2019', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2020', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2021', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2022', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2023', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2024', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2025', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2026', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2027', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2028', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2029', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
                ('LGCprice2030', models.DecimalField(decimal_places=2, default=36.0, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='LedLight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('fitting_type', models.CharField(choices=[('Batten', 'Batten'), ('Bulkhead', 'Bulkhead'), ('Downlight', 'Downlight'), ('Decorative', 'Decorative'), ('Floodlight', 'Floodlight'), ('Highbay', 'Highbay'), ('Other', 'Other'), ('Oyster', 'Oyster'), ('Panel', 'Panel'), ('Weatherproof', 'Weatherproof')], max_length=30)),
                ('installation_type', models.CharField(choices=[('Recessed Plaster', 'Recessed Plaster'), ('Recessed T-Grid', 'Recessed T-Grid'), ('Surface Mount', 'Surface Mount'), ('Suspended', 'Suspended'), ('Wall Mount', 'Wall Mount'), ('Other', 'Other')], max_length=30)),
                ('system_power', models.DecimalField(decimal_places=1, max_digits=5)),
                ('led_life', models.IntegerField()),
                ('replacement_fitting_price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('replacement_fittings_per_hour', models.IntegerField()),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='LightingData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verdia_fee', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='OffpeakEnergyRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('queensland', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('new_south_wales', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('victoria', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('south_australia', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('western_australia', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('australian_capital_territory', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('tasmania', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('northern_territory', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PeakEnergyRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('queensland', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('new_south_wales', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('victoria', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('south_australia', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('western_australia', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('australian_capital_territory', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('tasmania', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('northern_territory', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFCCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pfc_rating', models.IntegerField(unique=True)),
                ('pfc_dollar_per_kvar', models.DecimalField(decimal_places=1, max_digits=5)),
            ],
            options={
                'ordering': ('pfc_rating',),
            },
        ),
        migrations.CreateModel(
            name='SolarCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_size', models.IntegerField(unique=True)),
                ('single_site_dollar_per_watt', models.DecimalField(decimal_places=3, max_digits=5)),
                ('single_site_verdia_fee', models.DecimalField(decimal_places=3, max_digits=5)),
                ('multi_site_dollar_per_watt', models.DecimalField(decimal_places=3, max_digits=5)),
                ('multi_site_verdia_fee', models.DecimalField(decimal_places=3, max_digits=5)),
            ],
            options={
                'ordering': ('system_size',),
            },
        ),
        migrations.CreateModel(
            name='SolarData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=50)),
                ('solar_data_file', models.FileField(upload_to=references.models.solar_data_file_name)),
            ],
        ),
        migrations.CreateModel(
            name='TariffEscalations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('queensland', models.DecimalField(decimal_places=3, max_digits=4)),
                ('new_south_wales', models.DecimalField(decimal_places=3, max_digits=4)),
                ('victoria', models.DecimalField(decimal_places=3, max_digits=4)),
                ('south_australia', models.DecimalField(decimal_places=3, max_digits=4)),
                ('western_australia', models.DecimalField(decimal_places=3, max_digits=4)),
                ('australian_capital_territory', models.DecimalField(decimal_places=3, max_digits=4)),
                ('tasmania', models.DecimalField(decimal_places=3, max_digits=4)),
                ('northern_territory', models.DecimalField(decimal_places=3, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='PostcodeResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postcode', models.IntegerField()),
                ('suburb', models.CharField(max_length=100)),
                ('state', models.CharField(choices=[('new_south_wales', 'New South Wales'), ('northern_territory', 'Northern Territory'), ('queensland', 'Queensland'), ('victoria', 'Victoria'), ('south_australia', 'South Australia'), ('australian_capital_territory', 'Australian Capital Territory'), ('tasmania', 'Tasmania'), ('western_australia', 'Western Australia')], max_length=20)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('emissions_factor', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('stc_zone', models.IntegerField()),
                ('rating', models.DecimalField(decimal_places=3, max_digits=4)),
                ('pvsyst_generation_factor', models.DecimalField(decimal_places=4, max_digits=5)),
            ],
            options={
                'ordering': ('postcode', 'suburb'),
                'unique_together': {('postcode', 'suburb')},
            },
        ),
        migrations.CreateModel(
            name='ExistingLight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('other_names', models.TextField(blank=True, null=True)),
                ('fitting_type', models.CharField(choices=[('Batten', 'Batten'), ('Bulkhead', 'Bulkhead'), ('Downlight', 'Downlight'), ('Decorative', 'Decorative'), ('Emergency Batten', 'Emergency Batten'), ('Floodlight', 'Floodlight'), ('Highbay', 'Highbay'), ('Other', 'Other'), ('Oyster', 'Oyster'), ('Troffer', 'Troffer'), ('Panel', 'Panel'), ('Weatherproof', 'Weatherproof')], max_length=30)),
                ('installation_type', models.CharField(choices=[('Recessed Plaster', 'Recessed Plaster'), ('Recessed T-Grid', 'Recessed T-Grid'), ('Surface Mount', 'Surface Mount'), ('Suspended', 'Suspended'), ('Wall Mount', 'Wall Mount'), ('Other', 'Other')], max_length=30)),
                ('lamp_quantity', models.IntegerField()),
                ('lamp_wattage', models.DecimalField(decimal_places=1, max_digits=5)),
                ('system_power', models.DecimalField(decimal_places=1, max_digits=5)),
                ('lamp_life', models.IntegerField()),
                ('replacement_lamp_price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('replacement_lamp_fittings_per_hour', models.IntegerField()),
                ('replacement_fitting_price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('replacement_fittings_per_hour', models.IntegerField()),
                ('led_light', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='existing_lights', to='references.LedLight')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
    ]
