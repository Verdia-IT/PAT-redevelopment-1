var data;

$(document).ready(function () {
    $("#submit-file").click(handleFileSelect);
    // $("#csv-file").change(something1);
});

function submitProgramForm() {
    var Form = document.getElementById("form_program")
    Form.submit();
}

function submitSiteForm() {
    var Form = document.getElementById("form_site")
    Form.submit();
}




function breakExcelDate(excelDate) {
    excelDate = excelDate - 1;
    fractionPart = excelDate - Math.floor(excelDate);
    intPart = excelDate - fractionPart;
    hr = Math.floor(fractionPart * 24);
    numMinutes = 60 * (fractionPart * 24 - hr);
    yearsPresent = 1900;
    daysPassed = 0;

    while (true) {
        if (LY(yearsPresent)) {
            daysPassedTemp = daysPassed + 366;
        }
        else {
            daysPassedTemp = daysPassed + 365;
        }

        if (daysPassedTemp < intPart) {
            yearsPresent = yearsPresent + 1;
            daysPassed = daysPassedTemp;
        }
        else {
            break;
        }
    }

    monthsPresent = 01;
    remDays = intPart - daysPassed;

    normMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    leapMonths = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

    if (LY(yearsPresent)) {
        useMonths = leapMonths;
    }
    else {
        useMonths = normMonths;
    }

    kTprev = 0;
    for (i = 0; i < 12; i++) {
        kT = kTprev + useMonths[i];
        if (remDays > kT) {
            monthsPresent = monthsPresent + 1;
            kTprev = kT;
        }
        else {
            daysPresent = remDays - kTprev;
            break;
        }
    }

    outs = [yearsPresent, monthsPresent, daysPresent, hr, numMinutes];
    return outs;
}

function LY(yearPresent) {

    mod4 = yearPresent / 4 - Math.floor(yearPresent / 4);
    mod100 = yearPresent / 100 - Math.floor(yearPresent / 100);
    mod400 = yearPresent / 400 - Math.floor(yearPresent / 400);

    if (((mod4 == 0) && (mod100 != 0)) || (mod400 == 0)) {
        return 1;
    }
    else {
        return 0;
    }
}


function dateFormat(data) {
    var d = new Date(data);
    Syear = d.getFullYear();
    Smonth = R2(d.getMonth() + 1);
    Sday = R2(d.getDate());
    Shours = R2(d.getHours());
    Sminutes = R2(d.getMinutes());
    var prestr = Syear + "-" + Smonth + "-" + Sday + " " + Shours + ":" + Sminutes;
    return prestr;
}

function R2(par) {
    if (par < 10) {
        par = "0" + par;
    }
    return par;
}




// Iteration chart
var iterateBtn = document.getElementById("iterate-btn");
iterateBtn.addEventListener("click", function () {
    iterate();
});

function iterate() {
    var url = '/simulations/run_iterations/'
    var obj = new Object;
    obj.scenarioId = document.getElementById("hidden_scenario_id").value;
    obj.minSolar = parseInt(document.getElementById("iterations_min_solar").value);
    obj.steps = parseInt(document.getElementById("iterations_steps").value);
    obj.maxSolar = parseInt(document.getElementById("iterations_max_solar").value);
    var JSONobj = JSON.stringify(obj);
    params = "JSONobj=" + JSONobj;
    request = new ajaxRequest()
    request.open("POST", url, true)
    request.upload.onprogress = function(e){
        if (e.lengthComputable) {
            var ratio = Math.floor((e.loaded / e.total) * 100) + '%';
            console.log(ratio);
        }        
    }
    request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    request.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    request.setRequestHeader('X-CSRFToken', csrfcookie());
    request.onreadystatechange = function () {
        if (this.readyState == 4)
            if (this.status == 200)
                if (this.responseText != null) {
                    var data = JSON.parse(this.responseText);
                    data = data.data_dict
                    console.log(data)
                    // var df = JSON.parse(data.value);
                    var solarSizes = data.solar_sizes
                    var solarCapex = data.solar_capex
                    var NPV = data.npvs
                    var payback = data.paybacks
                    var IRR = data.irrs
                    var tenYearSavings = data.ten_year_savings
                    var solarUtilisation = data.solar_utilisations
                    var LCOE = data.lcoes
                    var counters = data.counters
                    // Reset canvas
                    document.getElementById("iteration_chart_parent_div").innerHTML = '<canvas id="iteration_chart" style="margin-top:5px"></canvas>'                    
                    var ctx = document.getElementById('iteration_chart').getContext('2d');
                    var iterationChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: solarSizes,
                            datasets: [
                                {
                                    label: 'Capex',
                                    yAxisID: 'A',
                                    data: solarCapex,
                                    borderWidth: 2,
                                    fill: false,
                                    borderColor: 'rgba(0, 59, 92, 0.8)',
                                },
                                {
                                    label: 'NPV',
                                    data: NPV,
                                    yAxisID: 'A',
                                    borderWidth: 2,
                                    fill: false,
                                    borderColor: "rgba(249, 66, 58, 0.8)",
                                },
                                {
                                    label: 'IRR',
                                    data: IRR,
                                    yAxisID: 'B',
                                    borderWidth: 2,
                                    fill: false,
                                    borderColor: "rgba(165, 156, 148, 0.8)",
                                },
                                {
                                    label: 'Payback',
                                    data: payback,
                                    yAxisID: 'A',
                                    borderWidth: 2,
                                    fill: false,
                                    borderColor: "rgba(139, 211, 230, 0.8)",
                                },
                                {
                                    label: '10 year savings',
                                    yAxisID: 'A',
                                    data: tenYearSavings,
                                    borderWidth: 2,
                                    fill: false,
                                    borderColor: "rgba(112, 173, 71, 0.80)",
                                },
                                {
                                    label: 'Solar Utilisation',
                                    yAxisID: 'B',
                                    data: solarUtilisation,
                                    borderWidth: 2,
                                    fill: false,
                                    borderColor: "rgba(238, 231, 192, 0.8)",
                                },
                                {
                                    label: 'LCOE',
                                    yAxisID: 'B',
                                    data: LCOE,
                                    borderWidth: 2,
                                    fill: false,
                                    borderColor: "rgba(246, 184, 236, 0)",
                                },
                            ]
                        },
                        options: {
                            scales: {
                                yAxes: [
                                    {
                                        id: 'A',
                                        type: 'linear',
                                        position: 'left',
                                    },
                                    {
                                        id: 'B',
                                        type: 'linear',
                                        position: 'right',
                                        ticks: {
                                            beginAtZero: true,
                                            max: 1.1,
                                            min: 0
                                        },
                                        gridLines: {
                                            display: false
                                        }

                                    }
                                ],
                                xAxes: [{
                                    gridLines: {
                                        display: false
                                    }
                                }]
                            }
                        }
                    });

                    var html = "";

                    for (var i = 0; i < counters.length; i++) {
                        html += "<tr>";
                        html += "<td>" + (i + 1) + "</td>";
                        html += "<td>" + numberFormat(solarSizes[i], 0, "no") + "</td>";
                        html += "<td>" + numberFormat(solarCapex[i], 0, "yes") + "</td>";
                        html += "<td>" + numberFormat(NPV[i], 0, "yes") + "</td>";
                        html += "<td>" + numberFormat(payback[i], 2, "no") + "</td>";
                        html += "<td>" + numberFormat(IRR[i] * 100, 2, "no") + "%" + "</td>";
                        html += "<td>" + numberFormat(tenYearSavings[i], 0, "yes") + "</td>";
                        html += "<td>" + numberFormat(Math.min(solarUtilisation[i], 1) * 100, 2, "no") + "%" + "</td>";
                        html += "<td>" + numberFormat(LCOE[i], 2, "yes") + "</td>";

                        html += "</tr>";

                    }
                    html += "</table>";
                    document.getElementById("iteration-table-body").innerHTML = html;
                    console.log(typeof(counters))
                }
    }
    request.send(params);
}





// console.log(numberFormat(-2318.564, 0, "yes"))

// Graphics
// Daily Consumption
var ctx = document.getElementById('graphics-daily-consumption').getContext('2d');
var averageLoadAfterPV = [];
var averageLoad = [];
var averageSolarOutput = [];
var lab = [];
var j;
var weekdays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
var count = 0;
for (j = 0; j < 7; j++) {
    for (i = 0; i < 24; i++) {

        lab[count] = i + ";" + weekdays[j];
        count++;
    }
}
// console.log(lab);
averageLoad = [368.5707692, 345.8838462, 343.0021154, 364.5484615, 345.9484615, 345.9432692, 411.7725, 469.2236538, 505.1475, 547.5946154,
    601.1330769, 627.7748077, 639.2440385, 650.3786538, 633.7211538, 616.4705769, 615.9819231, 657.2688462, 687.0640385, 643.0205769,
    582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 345.9484615, 345.9432692, 411.7725, 469.2236538, 505.1475, 547.5946154,
    601.1330769, 627.7748077, 639.2440385, 650.3786538, 633.7211538, 616.4705769, 615.9819231, 657.2688462, 687.0640385, 643.0205769,
    582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 345.9484615, 345.9432692, 411.7725, 469.2236538, 505.1475, 547.5946154,
    601.1330769, 627.7748077, 639.2440385, 650.3786538, 633.7211538, 616.4705769, 615.9819231, 657.2688462, 687.0640385, 643.0205769,
    582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 345.9484615, 345.9432692, 411.7725, 469.2236538, 505.1475, 547.5946154,
    601.1330769, 627.7748077, 639.2440385, 650.3786538, 633.7211538, 616.4705769, 615.9819231, 657.2688462, 687.0640385, 643.0205769,
    582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 345.9484615, 345.9432692, 411.7725, 469.2236538, 505.1475, 547.5946154,
    601.1330769, 627.7748077, 639.2440385, 650.3786538, 633.7211538, 616.4705769, 615.9819231, 657.2688462, 687.0640385, 643.0205769,
    582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 345.9484615, 345.9432692, 411.7725, 469.2236538, 505.1475, 547.5946154,
    601.1330769, 627.7748077, 639.2440385, 650.3786538, 633.7211538, 616.4705769, 615.9819231, 657.2688462, 687.0640385, 643.0205769,
    582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 345.9484615, 345.9432692, 411.7725, 469.2236538, 505.1475, 547.5946154,
    601.1330769, 627.7748077, 639.2440385, 650.3786538, 633.7211538, 616.4705769, 615.9819231, 657.2688462, 687.0640385, 643.0205769,
    582.2226923, 486.2538462, 422.9838462, 385.4082692];

averageLoadAfterPV = [368.5707692, 345.8838462, 343.0021154, 364.5484615, 327.3292308, 327.1898361, 390.6255417, 441.1380421,
    465.1323585, 494.6868243, 539.8768707, 562.2631538, 572.6772505, 586.6088793, 575.4840548, 566.5899567, 576.2099337, 628.599274,
    684.0082924, 642.6237252, 582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 327.3292308, 327.1898361, 390.6255417, 441.1380421,
    465.1323585, 494.6868243, 539.8768707, 562.2631538, 572.6772505, 586.6088793, 575.4840548, 566.5899567, 576.2099337, 628.599274,
    684.0082924, 642.6237252, 582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 327.3292308, 327.1898361, 390.6255417, 441.1380421,
    465.1323585, 494.6868243, 539.8768707, 562.2631538, 572.6772505, 586.6088793, 575.4840548, 566.5899567, 576.2099337, 628.599274,
    684.0082924, 642.6237252, 582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 327.3292308, 327.1898361, 390.6255417, 441.1380421,
    465.1323585, 494.6868243, 539.8768707, 562.2631538, 572.6772505, 586.6088793, 575.4840548, 566.5899567, 576.2099337, 628.599274,
    684.0082924, 642.6237252, 582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 327.3292308, 327.1898361, 390.6255417, 441.1380421,
    465.1323585, 494.6868243, 539.8768707, 562.2631538, 572.6772505, 586.6088793, 575.4840548, 566.5899567, 576.2099337, 628.599274,
    684.0082924, 642.6237252, 582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 327.3292308, 327.1898361, 390.6255417, 441.1380421,
    465.1323585, 494.6868243, 539.8768707, 562.2631538, 572.6772505, 586.6088793, 575.4840548, 566.5899567, 576.2099337, 628.599274,
    684.0082924, 642.6237252, 582.2226923, 486.2538462, 422.9838462, 385.4082692, 368.5707692, 345.8838462, 343.0021154, 364.5484615, 327.3292308, 327.1898361, 390.6255417, 441.1380421,
    465.1323585, 494.6868243, 539.8768707, 562.2631538, 572.6772505, 586.6088793, 575.4840548, 566.5899567, 576.2099337, 628.599274,
    684.0082924, 642.6237252, 582.2226923, 486.2538462, 422.9838462, 385.4082692];

averageSolarOutput = [0, 0, 0, 0, 0, 0.134202404, 2.527727548, 9.466380962, 20.6728338, 33.56548337, 41.91389856, 46.16934615,
    47.22448029, 44.42746683, 38.89479135, 30.5383125, 20.42968173, 10.05034135, 3.055746058, 0.396851731, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.134202404, 2.527727548, 9.466380962, 20.6728338, 33.56548337, 41.91389856, 46.16934615,
    47.22448029, 44.42746683, 38.89479135, 30.5383125, 20.42968173, 10.05034135, 3.055746058, 0.396851731, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.134202404, 2.527727548, 9.466380962, 20.6728338, 33.56548337, 41.91389856, 46.16934615,
    47.22448029, 44.42746683, 38.89479135, 30.5383125, 20.42968173, 10.05034135, 3.055746058, 0.396851731, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.134202404, 2.527727548, 9.466380962, 20.6728338, 33.56548337, 41.91389856, 46.16934615,
    47.22448029, 44.42746683, 38.89479135, 30.5383125, 20.42968173, 10.05034135, 3.055746058, 0.396851731, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.134202404, 2.527727548, 9.466380962, 20.6728338, 33.56548337, 41.91389856, 46.16934615,
    47.22448029, 44.42746683, 38.89479135, 30.5383125, 20.42968173, 10.05034135, 3.055746058, 0.396851731, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.134202404, 2.527727548, 9.466380962, 20.6728338, 33.56548337, 41.91389856, 46.16934615,
    47.22448029, 44.42746683, 38.89479135, 30.5383125, 20.42968173, 10.05034135, 3.055746058, 0.396851731, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.134202404, 2.527727548, 9.466380962, 20.6728338, 33.56548337, 41.91389856, 46.16934615,
    47.22448029, 44.42746683, 38.89479135, 30.5383125, 20.42968173, 10.05034135, 3.055746058, 0.396851731, 0, 0, 0, 0];


var dailyConsumptionChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: lab,
        datasets: [
            {
                label: 'Average Solar Output',
                data: averageSolarOutput,
                borderWidth: 2,
                fill: false,
                borderColor: "rgba(135, 211, 233, 1)",
                pointRadius: 0,
            },
            {
                label: 'Average Load After PV',
                data: averageLoadAfterPV,
                borderWidth: 2,
                fill: true,
                borderColor: "rgba(160, 165, 173, 0.8)",
                backgroundColor: 'rgba(160, 165, 173, 0.8)',
                pointRadius: 0,
            },
            {
                label: 'Average Consumption',
                data: averageLoad,
                borderWidth: 2,
                fill: true,
                borderColor: 'rgba(0, 47, 75, 0.8)',
                backgroundColor: 'rgba(0, 47, 75, 0.8)',
                pointRadius: 0,

            },




        ]
    },
    options: {
        title: {
            display: true,
            text: ['Daily Consumption ', 'Before and after Solar PV'],
            fontSize: 20,
            fontColor: '#666',
        },
        scales: {
            yAxes: [
                {

                    type: 'linear',
                    ticks: {
                        beginAtZero: true,

                    },
                    gridLines: {
                        display: true,

                    }

                }
            ],
            xAxes: [
                {
                    id: 'xAxis1',
                    type: "category",
                    ticks: {
                        callback: function (label) {
                            var time = label.split(";")[0];
                            var day = label.split(";")[1];
                            return time;
                        }
                    },
                    gridLines: {
                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                    },
                },
                {
                    id: 'xAxis2',
                    type: "category",
                    gridLines: {
                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                    },
                    ticks: {
                        callback: function (label) {
                            var time = label.split(";")[0];
                            var day = label.split(";")[1];
                            if (time == "12") {
                                return day;
                            } else {
                                return "";
                            }
                        }
                    }
                }],
        }
    }
});

// Spill Pattern  

var ctx = document.getElementById('graphics-spill-pattern').getContext('2d');
var weekdayConsumption = []
var consumptionAfterLighting = [];
var solarGeneration = [];
var lab = [];
var j;
var months1 = ["January", "February", "March", "April", "May", "June", "July", "August",
    "September", "October", "November", "December"];
var count = 0;
for (j = 0; j < 12; j++) {
    for (i = 0; i < 24; i++) {

        lab[count] = i + ";" + months1[j];
        count++;
    }
}
// console.log(lab);
weekdayConsumption = [495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909, 495.0095455, 464.7327273, 402.0477273, 399.7868182, 454.1059091, 431.6986364, 431.4531818, 559.0936364,
    635.1327273, 665.9877273, 704.0372727, 761.1531818, 802.0854545, 813.5509091, 831, 815.6659091, 802.2177273, 797.0222727,
    809.8881818, 825.1159091, 809.2963636, 742.0118182, 652.515, 546.2890909];

consumptionAfterLighting = [479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348, 479.8226087, 484.0734783, 422.9204348, 416.673913, 448.4452174, 403.8204348, 402.4391304, 461.083913,
    514.0065217, 554.963913, 609.7517391, 671.5126087, 726.2873913, 746.6730435, 754.4313043, 746.4486957, 723.556087, 725.1721739,
    734.1804348, 779.7834783, 741.9965217, 676.8456522, 599.2917391, 522.0704348];

solarGeneration = [0, 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0, , 0, 0, 0, 0, 0, 0.178925795, 7.212647273, 20.1995283, 34.66996023, 48.12432727, 56.38985341, 60.98769318,
    62.28042727, 60.57719886, 55.05814773, 47.26812273, 37.71252614, 25.17895682, 11.76214943, 2.133307045, 0.010724886, 0, 0];


var spillPatternChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: lab,
        datasets: [
            {
                label: 'Solar Generation',
                data: solarGeneration,
                borderWidth: 2,
                fill: false,
                borderColor: "rgba(135, 211, 233, 1)",
                pointRadius: 0,
            },
            {
                label: 'Consumption after Lighting',
                data: consumptionAfterLighting,
                borderWidth: 2,
                fill: true,
                borderColor: "rgba(160, 165, 173, 0.8)",
                backgroundColor: 'rgba(160, 165, 173, 0.8)',
                pointRadius: 0,
            },
            {
                label: 'Weekday Consumption',
                data: weekdayConsumption,
                borderWidth: 2,
                fill: true,
                borderColor: 'rgba(0, 47, 75, 0.8)',
                backgroundColor: 'rgba(0, 47, 75, 0.8)',
                pointRadius: 0,

            },




        ]
    },
    options: {
        title: {
            display: true,
            text: ['Spill Pattern - Weekdays'],
            fontSize: 20,
            fontColor: '#666',
        },
        scales: {
            yAxes: [
                {

                    type: 'linear',
                    ticks: {
                        beginAtZero: true,

                    },
                    gridLines: {
                        display: true,

                    }

                }
            ],
            xAxes: [
                {
                    id: 'xAxis1',
                    type: "category",
                    ticks: {
                        callback: function (label) {
                            var time = label.split(";")[0];
                            var month = label.split(";")[1];
                            return time;
                        }
                    },
                    gridLines: {
                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                    },
                },
                {
                    id: 'xAxis2',
                    type: "category",
                    gridLines: {
                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                    },
                    ticks: {
                        callback: function (label) {
                            var time = label.split(";")[0];
                            var month = label.split(";")[1];
                            if (time == "12") {
                                return month;
                            } else {
                                return "";
                            }
                        }
                    }
                }],
        }
    }
});

